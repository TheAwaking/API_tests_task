name: CI/CD Pipeline

on:
  push

env:
  COMPOSE_NETWORK: "test-network"

jobs:
  lint:
    name: Линтинг кода
    runs-on: ubuntu-latest
    
    steps:
      - name: Клонирование кода
        uses: actions/checkout@v3

      - name: Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # - name: Установка Ruff
      #   run: pip install ruff

      # - name: Запуск Ruff
      #   run: ruff check .

  deploy:
    name: Развертывание системы
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Клонирование кода
        uses: actions/checkout@v3

      - name: Настройка Docker
        uses: docker/setup-buildx-action@v2

      - name: Создание сети для тестов
        run: docker network create ${{ env.COMPOSE_NETWORK }} || true

      - name: Запуск сервисов
        run: |
          docker-compose up -d
          echo "Ожидание готовности сервисов..."
          
          # Ожидание доступности сервиса (пример для HTTP-сервиса)
          timeout 120 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/health)" != "200" ]]; do 
            sleep 5; 
          done' || (echo "Сервис не запустился" && exit 1)

  test:
    name: Запуск тестов
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Клонирование кода
        uses: actions/checkout@v3

      - name: Запуск тестов в Docker
        run: |
          docker run --network ${{ env.COMPOSE_NETWORK }} \
            -v $(pwd)/allure-results:/app/allure-results \
            -e SERVICE_URL=http://service:8080 \ # Используем имя сервиса из docker-compose
            your-test-image:latest \
            pytest --alluredir=/app/allure-results

      - name: Сохранение результатов
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: ./allure-results

  report:
    name: Публикация отчета
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Клонирование кода
        uses: actions/checkout@v3

      - name: Загрузка результатов
        uses: actions/download-artifact@v3
        with:
          name: allure-results

      - name: Установка Allure
        run: sudo apt-get install -y allure

      - name: Генерация отчета
        run: |
          allure generate ./allure-results -o ./report --clean

      - name: Публикация отчета
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./report
